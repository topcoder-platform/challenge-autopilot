service: eventbridge-poc
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  logs:
    restApi: true
  tracing:
    apiGateway: true
    lambda: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource: "*"
  environment:
    CHALLENGES_TABLE: ${env:CHALLENGES_TABLE}
    SUBMISSION_REVIEWS_TABLE: ${env:SUBMISSION_REVIEWS_TABLE}
    SUBMISSIONS_TABLE: ${env:SUBMISSIONS_TABLE}
    AUTH0_URL: ${env:AUTH0_URL}
    AUTH0_AUDIENCE: ${env:AUTH0_AUDIENCE}
    TOKEN_CACHE_TIME: ${env:TOKEN_CACHE_TIME}
    AUTH0_CLIENT_ID: ${env:AUTH0_CLIENT_ID}
    AUTH0_CLIENT_SECRET: ${env:AUTH0_CLIENT_SECRET}
    SCHEDULE_API_URL: ${env:SCHEDULE_API_URL}
    CHALLENGE_API_URL: ${env:CHALLENGE_API_URL}
    SUBMISSIONS_API_URL: ${env:SUBMISSIONS_API_URL}
    CHALLENGE_TABLE_ARN: ${env:CHALLENGE_TABLE_ARN}
    SUBMISSIONS_TABLE_ARN: ${env:SUBMISSIONS_TABLE_ARN}
    CHALLENGE_REVIEW_TABLE_ARN: ${env:CHALLENGE_REVIEW_TABLE_ARN}
    TEST_TABLE_ARN: ${env:TEST_TABLE_ARN}


package:
  individually: true

useDotenv: true
plugins:
  - serverless-iam-roles-per-function
  - serverless-bundle

functions:
  schedulePhasesByChallenge:
    handler: handlers/events/schedule-phases.testHandler
    events:
      - stream:
        type: dynamodb
        arn: ${env:TEST_TABLE_ARN}
  # # EventBridge handler functions
  # schedulePhasesByChallenge:
  #   handler: handlers/events/schedule-phases.handlerChallenge
  #   events:
  #     - eventBridge:
  #         pattern:
  #           source:
  #             - dynamodb.${env:CHALLENGES_TABLE}
  #   iamRoleStatementsInherit: true
  #   iamRoleStatements:
  #     - Effect: Allow
  #       Action:
  #         - dynamodb:GetItem
  #         - dynamodb:PutItem
  #         - dynamodb:UpdateItem
  #       Resource: ${env:CHALLENGE_TABLE_ARN}
  # schedulePhasesByReview:
  #   handler: handlers/events/schedule-phases.handlerReview
  #   events:
  #     - eventBridge:
  #         pattern:
  #           source:
  #             - dynamodb.${env:SUBMISSION_REVIEWS_TABLE}
  #   iamRoleStatementsInherit: true
  #   iamRoleStatements:
  #     - Effect: Allow
  #       Action:
  #         - dynamodb:GetItem
  #         - dynamodb:PutItem
  #         - dynamodb:UpdateItem
  #       Resource: ${env:CHALLENGE_REVIEW_TABLE_ARN}
  # schedulePhasesBySubmission:
  #   handler: handlers/events/schedule-phases.handlerSubmission
  #   events:
  #     - eventBridge:
  #         pattern:
  #           source:
  #             - dynamodb.${env:SUBMISSIONS_TABLE}
  #   iamRoleStatementsInherit: true
  #   iamRoleStatements:
  #     - Effect: Allow
  #       Action:
  #         - dynamodb:GetItem
  #         - dynamodb:PutItem
  #         - dynamodb:UpdateItem
  #       Resource: ${env:SUBMISSIONS_TABLE_ARN}
