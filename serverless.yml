service: eventbridge-poc
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  eventBridge:
    useCloudFormation: true
  logs:
    restApi: true
  tracing:
    apiGateway: true
    lambda: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource: "*"
  environment:
    CHALLENGES_TABLE: ${env:CHALLENGES_TABLE}
    AUTH0_URL: ${env:AUTH0_URL}
    AUTH0_AUDIENCE: ${env:AUTH0_AUDIENCE}
    TOKEN_CACHE_TIME: ${env:TOKEN_CACHE_TIME}
    AUTH0_CLIENT_ID: ${env:AUTH0_CLIENT_ID}
    AUTH0_CLIENT_SECRET: ${env:AUTH0_CLIENT_SECRET}
    SCHEDULE_API_URL: ${env:SCHEDULE_API_URL}
    CHALLENGE_API_URL: ${env:CHALLENGE_API_URL}


package:
  individually: true

useDotenv: true
plugins:
  - serverless-iam-roles-per-function
  - serverless-dynamodb-to-eventbridge-plugin
  - serverless-bundle

resources:
  # Only create CloudTrail resources if necessary
  Conditions:
    CreateCloudTrail:
      Fn::Equals:
        - ${env:CREATE_CLOUDTRAIL, false}
        - true
  Resources:
    # DynamoDB tables
    ChallengesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:CHALLENGES_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: status
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: StatusIndex
            KeySchema:
              - AttributeName: status
                KeyType: HASH
            Projection:
              NonKeyAttributes:
                - id
                - name
                - numberOfSubmissions
              ProjectionType: INCLUDE
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

functions:
  # EventBridge handler functions
  schedulePhases:
    handler: handlers/events/schedule-phases.handler
    events:
      - eventBridge:
          pattern:
            source:
              - dynamodb.${env:CHALLENGES_TABLE}
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
        Resource: !GetAtt ChallengesTable.Arn
